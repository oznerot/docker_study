apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  labels:
    app: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: api
          image: {{ .Values.api.image }}
          imagePullPolicy: IfNotPresent
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: MONGO_INITDB_ROOT_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: MONGO_INITDB_ROOT_PASSWORD
            - name: MONGO_HOST
              valueFrom:
                configMapKeyRef:
                  name: mongodb-config
                  key: MONGO_HOST
            - name: MONGO_PORT
              valueFrom:
                configMapKeyRef:
                  name: mongodb-config
                  key: MONGO_PORT
            - name: CORS_ORIGINS
              value: '{{ join "," .Values.api.corsOrigins }}'
            - name: FASTAPI_ROOT_PATH
              value: "{{ .Values.api.rootPath }}"
          ports:
            - containerPort: {{ .Values.api.port }} 
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.api.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.api.port }}
            initialDelaySeconds: 15
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: api
spec:
  selector:
    app: api
  ports:
    - protocol: TCP
      port: {{ .Values.api.port }}
      targetPort: {{ .Values.api.port }}